<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 800">
  <!-- Background with subtle grid -->
  <defs>
    <pattern id="smallGrid" width="10" height="10" patternUnits="userSpaceOnUse">
      <path d="M 10 0 L 0 0 0 10" fill="none" stroke="#f0f0f0" stroke-width="0.5"/>
    </pattern>
    <pattern id="grid" width="100" height="100" patternUnits="userSpaceOnUse">
      <rect width="100" height="100" fill="url(#smallGrid)"/>
      <path d="M 100 0 L 0 0 0 100" fill="none" stroke="#e0e0e0" stroke-width="1"/>
    </pattern>
    <linearGradient id="headerGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#1a365d;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2a4365;stop-opacity:1" />
    </linearGradient>
    <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="3"/>
      <feOffset dx="2" dy="2" result="offsetblur"/>
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.2"/>
      </feComponentTransfer>
      <feMerge>
        <feMergeNode/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>
  <rect width="1200" height="800" fill="white"/>
  <rect width="1200" height="800" fill="url(#grid)" opacity="0.8"/>

  <!-- Title -->
  <rect x="150" y="20" width="900" height="60" rx="5" ry="5" fill="url(#headerGradient)" filter="drop-shadow(0px 3px 3px rgba(0, 0, 0, 0.3))"/>
  <text x="600" y="60" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="white" text-anchor="middle">National Address Database Submission Tool - Core Implementation Flow</text>

  <!-- Module Sections -->
  <!-- Data Submission Use Cases -->
  <rect x="50" y="120" width="350" height="650" rx="10" ry="10" fill="#f0f8ff" stroke="#3182ce" stroke-width="2" filter="url(#dropShadow)"/>
  <rect x="50" y="120" width="350" height="40" rx="10" ry="10" fill="#3182ce"/>
  <text x="225" y="147" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white" text-anchor="middle">Data Submission Use Cases</text>

  <!-- DataHandler & Validator -->
  <rect x="430" y="120" width="350" height="650" rx="10" ry="10" fill="#f0fff4" stroke="#38a169" stroke-width="2" filter="url(#dropShadow)"/>
  <rect x="430" y="120" width="350" height="40" rx="10" ry="10" fill="#38a169"/>
  <text x="605" y="147" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white" text-anchor="middle">Data Handler and Validator</text>

  <!-- Storage & Task Queue -->
  <rect x="810" y="120" width="350" height="650" rx="10" ry="10" fill="#fff5f5" stroke="#e53e3e" stroke-width="2" filter="url(#dropShadow)"/>
  <rect x="810" y="120" width="350" height="40" rx="10" ry="10" fill="#e53e3e"/>
  <text x="985" y="147" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white" text-anchor="middle">Storage and Task Queue</text>

  <!-- Data Submission Use Cases Elements -->
  <!-- get_data_submission -->
  <rect x="70" y="170" width="310" height="60" rx="5" ry="5" fill="white" stroke="#3182ce" stroke-width="1.5"/>
  <text x="225" y="195" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">get_data_submission()</text>
  <text x="225" y="215" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Retrieves submission by ID</text>

  <!-- get_data_submissions_by_producer -->
  <rect x="70" y="240" width="310" height="60" rx="5" ry="5" fill="white" stroke="#3182ce" stroke-width="1.5"/>
  <text x="225" y="265" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">get_data_submissions_by_producer()</text>
  <text x="225" y="285" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Lists submissions for a specific producer</text>

  <!-- validate_file_before_submission -->
  <rect x="70" y="310" width="310" height="60" rx="5" ry="5" fill="white" stroke="#3182ce" stroke-width="1.5"/>
  <text x="225" y="335" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">validate_file_before_submission()</text>
  <text x="225" y="355" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Pre-validates file and schema</text>

  <!-- create_data_submission -->
  <rect x="70" y="380" width="310" height="100" rx="5" ry="5" fill="#edf2ff" stroke="#3182ce" stroke-width="2"/>
  <text x="225" y="405" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">create_data_submission()</text>
  <text x="225" y="425" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. Creates submission record</text>
  <text x="225" y="445" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. Uploads file to storage</text>
  <text x="225" y="465" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">3. Triggers validation</text>

  <!-- validate_data_submission -->
  <rect x="70" y="490" width="310" height="140" rx="5" ry="5" fill="#edf2ff" stroke="#3182ce" stroke-width="2"/>
  <text x="225" y="515" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">validate_data_submission()</text>
  <text x="225" y="535" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. Downloads file from storage</text>
  <text x="225" y="555" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. Gets column mapping</text>
  <text x="225" y="575" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">3. Starts validation via task queue</text>
  <text x="225" y="595" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">4. Copies mapped data to remote</text>
  <text x="225" y="615" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">5. Cleans up temporary files</text>

  <!-- Data Handler & Validator Elements -->
  <!-- DataHandler.__init__ -->
  <rect x="450" y="170" width="310" height="60" rx="5" ry="5" fill="white" stroke="#38a169" stroke-width="1.5"/>
  <text x="605" y="195" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">DataHandler.__init__()</text>
  <text x="605" y="215" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Initializes with column_map and output dir</text>

  <!-- DataHandler.__validate_column_map -->
  <rect x="450" y="240" width="310" height="60" rx="5" ry="5" fill="white" stroke="#38a169" stroke-width="1.5"/>
  <text x="605" y="265" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">DataHandler.__validate_column_map()</text>
  <text x="605" y="285" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Checks for duplicate mappings</text>

  <!-- DataHandler.__rename_columns -->
  <rect x="450" y="310" width="310" height="60" rx="5" ry="5" fill="white" stroke="#38a169" stroke-width="1.5"/>
  <text x="605" y="335" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">DataHandler.__rename_columns()</text>
  <text x="605" y="355" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Maps original columns to NAD schema</text>

  <!-- DataHandler.read_file_in_batches -->
  <rect x="450" y="380" width="310" height="100" rx="5" ry="5" fill="#e6ffed" stroke="#38a169" stroke-width="2"/>
  <text x="605" y="405" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">DataHandler.read_file_in_batches()</text>
  <text x="605" y="425" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. Reads GeoDataFrame in batches</text>
  <text x="605" y="445" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. Applies column mapping</text>
  <text x="605" y="465" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">3. Writes mapped data (if output specified)</text>

  <!-- FileValidator.validate_file -->
  <rect x="450" y="490" width="310" height="70" rx="5" ry="5" fill="white" stroke="#38a169" stroke-width="1.5"/>
  <text x="605" y="515" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">FileValidator.validate_file()</text>
  <text x="605" y="535" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Checks if file is valid Shapefile or Geodatabase</text>
  <text x="605" y="555" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Confirms ZIP structure</text>

  <!-- FileValidator.validate_schema -->
  <rect x="450" y="570" width="310" height="60" rx="5" ry="5" fill="white" stroke="#38a169" stroke-width="1.5"/>
  <text x="605" y="595" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">FileValidator.validate_schema()</text>
  <text x="605" y="615" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Confirms schema compatibility with mapping</text>

  <!-- DataValidator.run -->
  <rect x="450" y="640" width="310" height="120" rx="5" ry="5" fill="#e6ffed" stroke="#38a169" stroke-width="2"/>
  <text x="605" y="665" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">DataValidator.run()</text>
  <text x="605" y="685" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. Initializes validation report</text>
  <text x="605" y="705" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. Validates field values against domains</text>
  <text x="605" y="725" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">3. Identifies missing required fields</text>
  <text x="605" y="745" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">4. Tracks statistics (null counts, etc.)</text>

  <!-- Storage & Task Queue Elements -->
  <!-- Storage.download_temp -->
  <rect x="830" y="170" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="195" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Storage.download_temp()</text>
  <text x="985" y="215" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Downloads file to temporary directory</text>

  <!-- Storage.upload -->
  <rect x="830" y="240" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="265" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Storage.upload()</text>
  <text x="985" y="285" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Uploads file to storage (MinIO)</text>

  <!-- Storage.cleanup_temp_dir -->
  <rect x="830" y="310" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="335" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Storage.cleanup_temp_dir()</text>
  <text x="985" y="355" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Removes temporary files</text>

  <!-- TaskQueue.run_load_and_validate -->
  <rect x="830" y="380" width="310" height="100" rx="5" ry="5" fill="#ffe6e6" stroke="#e53e3e" stroke-width="2"/>
  <text x="985" y="405" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">TaskQueue.run_load_and_validate()</text>
  <text x="985" y="425" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. Enqueues validation job in Celery</text>
  <text x="985" y="445" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. Processes data through DataHandler</text>
  <text x="985" y="465" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">3. Runs DataValidator on batches</text>

  <!-- TaskQueue.run_copy_mapped_data_to_remote -->
  <rect x="830" y="490" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="515" font-family="Arial, sans-serif" font-size="14" font-weight="bold" text-anchor="middle">TaskQueue.run_copy_mapped_data()</text>
  <text x="985" y="535" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Copies processed data to permanent storage</text>

  <!-- PostgreSQL Database -->
  <rect x="830" y="560" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="585" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">PostgreSQL Database</text>
  <text x="985" y="605" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Stores metadata and validation reports</text>

  <!-- MinIO Object Storage -->
  <rect x="830" y="630" width="310" height="60" rx="5" ry="5" fill="white" stroke="#e53e3e" stroke-width="1.5"/>
  <text x="985" y="655" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">MinIO Object Storage</text>
  <text x="985" y="675" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">Stores raw files and processed data</text>

  <!-- Workflow Arrows - FIXED to prevent overlapping -->
  <!-- Main flow from create_data_submission -->
  <path d="M 380 420 L 440 420" stroke="#3182ce" stroke-width="2" fill="none" marker-end="url(#arrowBlue)"/>
  <path d="M 380 540 L 440 540" stroke="#3182ce" stroke-width="2" fill="none" marker-end="url(#arrowBlue)"/>
  <path d="M 760 420 L 820 420" stroke="#38a169" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>
  <path d="M 760 700 L 790 700 L 790 660 L 830 660" stroke="#38a169" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>
  <path d="M 760 530 L 790 530 L 790 510 L 820 510" stroke="#38a169" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>

  <!-- Storage and Task Queue vertical flows -->
  <path d="M 985 480 L 985 490" stroke="#e53e3e" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>
  <path d="M 985 550 L 985 560" stroke="#e53e3e" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>
  <path d="M 985 620 L 985 630" stroke="#e53e3e" stroke-width="2" fill="none" marker-end="url(#arrowRed)"/>

  <!-- DataHandler to DataValidator flow -->
  <path d="M 605 480 L 605 640" stroke="#38a169" stroke-width="2" fill="none" marker-end="url(#arrowGreen)"/>

  <!-- Arrow Definitions -->
  <defs>
    <marker id="arrowBlue" markerWidth="10" markerHeight="10" refX="9" refY="5" orient="auto">
      <path d="M0,0 L10,5 L0,10 L2,5 Z" fill="#3182ce"/>
    </marker>
    <marker id="arrowGreen" markerWidth="10" markerHeight="10" refX="9" refY="5" orient="auto">
      <path d="M0,0 L10,5 L0,10 L2,5 Z" fill="#38a169"/>
    </marker>
    <marker id="arrowRed" markerWidth="10" markerHeight="10" refX="9" refY="5" orient="auto">
      <path d="M0,0 L10,5 L0,10 L2,5 Z" fill="#e53e3e"/>
    </marker>
  </defs>

  <!-- Key Workflow Steps Highlights -->
  <!-- Step 1 -->
  <circle cx="225" cy="430" r="20" fill="#3182ce" stroke="white" stroke-width="2"/>
  <text x="225" y="435" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white" text-anchor="middle">1</text>

  <!-- Step 2 -->
  <circle cx="605" cy="430" r="20" fill="#38a169" stroke="white" stroke-width="2"/>
  <text x="605" y="435" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white" text-anchor="middle">2</text>

  <!-- Step 3 -->
  <circle cx="605" cy="700" r="20" fill="#38a169" stroke="white" stroke-width="2"/>
  <text x="605" y="705" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white" text-anchor="middle">3</text>

  <!-- Step 4 -->
  <circle cx="985" cy="430" r="20" fill="#e53e3e" stroke="white" stroke-width="2"/>
  <text x="985" y="435" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white" text-anchor="middle">4</text>

  <!-- Step 5 -->
  <circle cx="985" cy="660" r="20" fill="#e53e3e" stroke="white" stroke-width="2"/>
  <text x="985" y="665" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white" text-anchor="middle">5</text>

  <!-- Legend -->
  <rect x="50" y="780" width="1110" height="40" rx="5" ry="5" fill="#f5f5f5" stroke="#d9d9d9" stroke-width="1"/>
  <text x="80" y="805" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#3182ce">Data Submission</text>
  <text x="220" y="805" font-family="Arial, sans-serif" font-size="14">→</text>
  <text x="260" y="805" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#38a169">Data Processing</text>
  <text x="400" y="805" font-family="Arial, sans-serif" font-size="14">→</text>
  <text x="440" y="805" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#e53e3e">Storage and Task Management</text>
  <text x="700" y="805" font-family="Arial, sans-serif" font-size="14">→</text>
  <text x="740" y="805" font-family="Arial, sans-serif" font-size="14">Complete NAD-Compliant GIS Data</text>
</svg>
